@using Abruple.App.Models.ViewModels.Contest

@model IEnumerable<ContestConciseViewModel>

@{
    ViewBag.Title = "Contests";
}

<h2 class="page-header">Contests</h2>

<ul id="contests-filter" class="nav nav-tabs">
    <li role="presentation" id="contest-filter-tab-active" class="contest-fileter-tab active">
        @Ajax.ActionLink("Active", "GetContests", new { filter = "active" }, new AjaxOptions()
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "contests-table-body",
            LoadingElementId = "ajax-loader"
        }, new { @class = "btn-link" })
    </li>
    <li role="presentation" id="contest-filter-tab-past" class="contest-fileter-tab">
        @Ajax.ActionLink("Past", "GetContests", new { filter = "past" }, new AjaxOptions()
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "contests-table-body",
            LoadingElementId = "ajax-loader"
        }, new { @class = "btn-link" })
    </li>
    @if (this.User.Identity.IsAuthenticated)
    {
        <li role="presentation" id="contest-filter-tab-own" class="contest-fileter-tab">
            @Ajax.ActionLink("Own", "GetContests", new { filter = "own" }, new AjaxOptions()
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "contests-table-body",
            LoadingElementId = "ajax-loader"
        }, new { @class = "btn-link" })
        </li>
    }
    <li role="presentation" id="contest-filter-tab-all" class="contest-fileter-tab">
        @Ajax.ActionLink("All", "GetContests", new { filter = "all" }, new AjaxOptions()
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "contests-table-body",
            LoadingElementId = "ajax-loader"
        }, new { @class = "btn-link" })
    </li>
</ul>

@using (Ajax.BeginForm("GetContests", "Contest", 
    new AjaxOptions()
    {
        HttpMethod = "GET",
        UpdateTargetId = "contests-table-body",
        InsertionMode = InsertionMode.InsertAfter,
        OnBegin = "toggleRequest('off')",
        OnComplete = "toggleRequest('on')",
        LoadingElementId = "ajax-loader"
        
    }, new { id = "get-contests-form" }))
{
    @Html.Hidden("filter", "active", new { id="contest-filter-value" })
    @Html.Hidden("entriesToSkip", 0, new { id = "contest-entries-to-skip" })   
}

<div class="container table">
    <table class="table table-responsive table-striped">
        <thead>
            <tr>
                <td class="col col-xs-push-9">Title</td>
                <td class="col col-sg-2">Author</td>
                <td class="col col-sg-2">Date</td>
                <td class="col col-lg-2">Entries</td>
                <td class="col col-lg-1">Details</td>
            </tr>
        </thead>
        <tbody id="contests-table-body">
            @Html.Partial("_contestsListPartial", Model) 
        </tbody>
    </table>
    <div id="ajax-loader" class="text-center">
        <img src="~/Content/images/ajax-loader.gif" alt="Loading" width="64" height="64" />
    </div>
</div>

@section scripts {
    <script>
        var isLoadingData = false;
        //var isDataOver = false; // TODO: NOT IMPLEMENTED!

        var toggleRequest = function(mode) {
            switch (mode) {
            case "on":
                isLoadingData = false;
                break;
            case "off":
            default:
                isLoadingData = false;
            }

            return isLoadingData;
        };

        $(document).ready(function() {
            // ENTRIES TO SKIP INIT
            var entriesToSkip = 0;
            // FORM
            var formToSubmit = $("#get-contests-form");

            // FILTER TABS
            var filterTab = $(".contest-fileter-tab");

            // FLITER TAB CHANGE TO ACTIVE ON CLICK AND SET FILTER VALUE
            filterTab.click(function() {
                var filterValue = $(this).text().toLocaleLowerCase();
                entriesToSkip = 0;
                $("#contest-filter-value").val(filterValue);

                filterTab.removeClass("active");
                $(this).toggleClass("active");
            });

            // GET ENTRIES TO SKIP AND PASS IT TO FORM HIDDEN INPUT
            // THEN INCREMENT ENTRIES TO SKIP
            var skipEntries = function(skipEntries) {

                $("#contest-entries-to-skip").val(skipEntries);

                entriesToSkip++;
            };

            // FORMT SUBMIT ON PAGE LOAD
            if (formToSubmit && !isLoadingData) {
                skipEntries(entriesToSkip);

                formToSubmit.submit();
            }

            // FORM SUBMIT ON SCROLL
            $(window).scroll(function() {
                if ($(window).scrollTop() === $(document).height() - $(window).height()) {
                    if (formToSubmit && !isLoadingData) {
                        skipEntries(entriesToSkip);

                        formToSubmit.submit();
                    }
                }
            });
            console.log(entriesToSkip);
        });
    </script>

    @*Hub implementation*@
    <script>
        $(document).ready(function() {

            var contestsHub = $.connection.contests;

            contestsHub.client.updateContests = function() {
                //Reload partial view here.
                $("#contests-table-body").load("/Contest/GetContests");

            };
            $.connection.hub.start();
        });
    </script>

}